<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" modelDirectory="/hu.blackbelt.judo.meta.query.model/src-gen" modelPluginID="hu.blackbelt.judo.meta.query.model"
    modelName="Query" editPluginClass="hu.blackbelt.judo.meta.query.provider.QueryEditPlugin"
    editorPluginClass="hu.blackbelt.judo.meta.query.presentation.QueryEditorPlugin"
    rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container" testsDirectory=""
    testSuiteClass="hu.blackbelt.judo.meta.query.tests.QueryAllTests" importerID="org.eclipse.emf.importer.ecore"
    featureDelegation="Dynamic" complianceLevel="8.0" copyrightFields="false" operationReflection="true"
    importOrganizing="true" oSGiCompatible="true">
  <foreignModel>query.ecore</foreignModel>
  <genPackages prefix="Query" basePackage="hu.blackbelt.judo.meta" resource="XMI"
      disposableProviderFactory="true" dataTypeConverters="true" extensibleProviderFactory="true"
      childCreationExtenders="true" ecorePackage="query.ecore#/">
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="query.ecore#//FunctionSignature">
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/NOT"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/AND"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/OR"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/XOR"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/IMPLIES"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/EQUALS"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/NOT_EQUALS"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/LESS_THAN"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/LESS_OR_EQUAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/GREATER_OR_EQUAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/GREATER_THAN"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/ADD_INTEGER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/SUBTRACT_INTEGER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/MULTIPLE_INTEGER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/DIVIDE_INTEGER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/MODULO_INTEGER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/OPPOSITE_INTEGER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/ADD_DECIMAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/SUBTRACT_DECIMAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/MULTIPLE_DECIMAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/DIVIDE_DECIMAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/OPPOSITE_DECIMAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/ROUND_DECIMAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/LENGTH_STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/LOWER_STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/TRIM_STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/UPPER_STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/CONCATENATE_STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/MATCHES_STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/POSITION_STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/REPLACE_STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/SUBSTRING_STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/ADD_DATE"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/DIFFERENCE_DATE"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/ADD_TIMESTAMP"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/DIFFERENCE_TIMESTAMP"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/INSTANCE_OF"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/TYPE_OF"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/IS_UNDEFINED_ATTRIBUTE"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/IS_UNDEFINED_OBJECT"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/MEMBER_OF"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/CONTAINS"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/EXISTS"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/NOT_EXISTS"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/COUNT"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/SUM_INTEGER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/MIN_INTEGER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/MAX_INTEGER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/SUM_DECIMAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/MIN_DECIMAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/MAX_DECIMAL"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//FunctionSignature/AVG_DECIMAL"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="query.ecore#//ParameterName">
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/LEFT"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/RIGHT"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/ITEM"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/COLLECTION"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/NUMBER"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/STRING"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/BOOLEAN"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/DATE"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/TIMESTAMP"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/ADDITION"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/START"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/END"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/INSTANCE"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/TYPE"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/PATTERN"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/CONTAINMENT"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/POSITION"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/REPLACEMENT"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/LENGTH"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/ATTRIBUTE"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ParameterName/RELATION"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="query.ecore#//ResultConstraint">
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ResultConstraint/PRECISION"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ResultConstraint/SCALE"/>
      <genEnumLiterals ecoreEnumLiteral="query.ecore#//ResultConstraint/MAX_LENGTH"/>
    </genEnums>
    <genClasses ecoreClass="query.ecore#//Attribute">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//Attribute/node"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//Attribute/sourceAttribute"/>
      <genOperations ecoreOperation="query.ecore#//Attribute/toString" body="return getNode().getAlias() + &quot;.&quot; + getSourceAttribute().getName() + getTargetAsString();"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//Constant">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute query.ecore#//Constant/value"/>
      <genOperations ecoreOperation="query.ecore#//Constant/toString" body="return getValue() + getTargetAsString();"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//EntityTypeName">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//EntityTypeName/type"/>
      <genOperations ecoreOperation="query.ecore#//EntityTypeName/toString" body="return getType().getName();"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//Feature">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//Feature/targetAttribute"/>
      <genOperations ecoreOperation="query.ecore#//Feature/getTarget" body="// FIXME&#xA;return (eContainer() instanceof hu.blackbelt.judo.meta.query.Target) ? (hu.blackbelt.judo.meta.query.Target) eContainer() : null;"/>
      <genOperations ecoreOperation="query.ecore#//Feature/getTargetAsString" body="return (getTargetAttribute() != null ? &quot; AS &quot; + getTargetAttribute().getName() + (getTarget() != null ? &quot;@&quot; + getTarget().getIndex() : &quot;&quot;) : &quot;&quot;);"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//Filter">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Filter/joins"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//Filter/feature"/>
      <genOperations ecoreOperation="query.ecore#//Filter/toString" body="return getFeature().toString() + &quot; [&quot; + getJoins().stream().map(j -> j.toString()).collect(java.util.stream.Collectors.joining(&quot;,&quot;)) + &quot;]&quot;;"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//Function">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute query.ecore#//Function/signature"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Function/parameters"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Function/constraints"/>
      <genOperations ecoreOperation="query.ecore#//Function/toString" body="return getSignature() +&#xA;&#x9;&#x9;                &quot;(&quot; + getParameters().stream().map(p -> &quot;[&quot; + p.getParameterName() + &quot;:] &quot; + p.getParameterValue()).collect(java.util.stream.Collectors.joining(&quot;, &quot;)) + &quot;)&quot; +&#xA;&#x9;&#x9;                getTargetAsString();"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//FunctionConstraint">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute query.ecore#//FunctionConstraint/resultConstraint"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute query.ecore#//FunctionConstraint/value"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//FunctionParameter">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute query.ecore#//FunctionParameter/parameterName"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//FunctionParameter/parameterValue"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//IdAttribute">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//IdAttribute/node"/>
      <genOperations ecoreOperation="query.ecore#//IdAttribute/toString" body="return &quot;ID of &quot; + getNode().getAlias() + (getTarget() != null ? &quot;@&quot; + getTarget().getIndex() : &quot;&quot;);"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//Join">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//Join/reference"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//Join/partner"/>
      <genOperations ecoreOperation="query.ecore#//Join/getAllJoins" body="return org.eclipse.emf.common.util.ECollections.asEList(java.util.stream.Stream.concat(getJoins().stream(), getJoins().stream().flatMap(j -> j.getAllJoins().stream())).collect(java.util.stream.Collectors.toList()));"/>
      <genOperations ecoreOperation="query.ecore#//Join/getPath" body="        final org.eclipse.emf.common.util.EList&lt;org.eclipse.emf.ecore.EReference> path = org.eclipse.emf.common.util.ECollections.newBasicEList(); &#xA;        path.add(getReference());&#xA;&#xA;        hu.blackbelt.judo.meta.query.Node parent = getPartner();&#xA;        while (parent != null) {&#xA;            if (parent instanceof hu.blackbelt.judo.meta.query.Join) {&#xA;                path.add(((hu.blackbelt.judo.meta.query.Join) parent).getReference());&#xA;                parent = ((hu.blackbelt.judo.meta.query.Join) parent).getPartner();&#xA;            } else if (parent instanceof hu.blackbelt.judo.meta.query.Select) {&#xA;                parent = null;&#xA;            } else {&#xA;                throw new IllegalStateException(&quot;Unsupported node&quot;);&#xA;            }&#xA;        }&#xA;&#xA;        org.eclipse.emf.common.util.ECollections.reverse(path);&#xA;&#xA;        return org.eclipse.emf.common.util.ECollections.unmodifiableEList(path);"/>
      <genOperations ecoreOperation="query.ecore#//Join/getType" body="return getReference().getEReferenceType();"/>
      <genOperations ecoreOperation="query.ecore#//Join/toString" body="return getPartner() != null ? getPartner().getAlias() + &quot;.&quot; + getReference().getName() + &quot;&lt;&quot; + getReference().getEReferenceType().getName() + &quot;>&quot; + &quot; AS &quot; + getAlias() + (getFilters().isEmpty() ? &quot;&quot; : &quot; ON &quot; + getFilters()) : &quot;N/A&quot;;"/>
    </genClasses>
    <genClasses image="false" ecoreClass="query.ecore#//Node">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute query.ecore#//Node/alias"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Node/joins"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Node/subSelects"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Node/filters"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Node/orderBys"/>
      <genOperations ecoreOperation="query.ecore#//Node/getType"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//OrderBy">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute query.ecore#//OrderBy/descending"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//OrderBy/feature"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//OrderBy/joins"/>
      <genOperations ecoreOperation="query.ecore#//OrderBy/toString" body="return getFeature().toString() + &quot; [&quot; + getJoins().stream().map(j -> j.toString()).collect(java.util.stream.Collectors.joining(&quot;,&quot;)) + &quot;]&quot;;"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//Select">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Select/target"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//Select/from"/>
      <genOperations ecoreOperation="query.ecore#//Select/getAllJoins" body="return hu.blackbelt.judo.meta.query.runtime.QueryUtils.getAllJoinsOfSelect(this);"/>
      <genOperations ecoreOperation="query.ecore#//Select/getJoinedTargets" body="return hu.blackbelt.judo.meta.query.runtime.QueryUtils.getJoinedTargets(this);"/>
      <genOperations ecoreOperation="query.ecore#//Select/getType" body="return getFrom();"/>
      <genOperations ecoreOperation="query.ecore#//Select/toString" body="return hu.blackbelt.judo.meta.query.runtime.QueryUtils.formatSelect(this);"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//SubSelect">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute query.ecore#//SubSelect/alias"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//SubSelect/transferRelation"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//SubSelect/partner"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//SubSelect/select"/>
      <genOperations ecoreOperation="query.ecore#//SubSelect/getBase" body="return (hu.blackbelt.judo.meta.query.Node) eContainer();"/>
      <genOperations ecoreOperation="query.ecore#//SubSelect/getNavigationJoins" body="final EList&lt;hu.blackbelt.judo.meta.query.Join> path = org.eclipse.emf.common.util.ECollections.newBasicEList();&#xA;&#xA;        if (getBase() != null) {&#xA;            for (final hu.blackbelt.judo.meta.query.Join join : getBase().getJoins()) {&#xA;                path.add(join);&#xA;                path.addAll(join.getAllJoins());&#xA;            }&#xA;        }&#xA;&#xA;        final EList&lt;hu.blackbelt.judo.meta.query.Join> additionalJoins = org.eclipse.emf.common.util.ECollections.newBasicEList();&#xA;        hu.blackbelt.judo.meta.query.Join additionalJoin = getPartner();&#xA;        while (additionalJoin != null &amp;&amp; !org.eclipse.emf.ecore.util.EcoreUtil.equals(additionalJoin, getBase()) &amp;&amp; !path.contains(additionalJoin) &amp;&amp; !additionalJoins.contains(additionalJoin)) {&#xA;            additionalJoins.add(additionalJoin);&#xA;            additionalJoin = (additionalJoin.getPartner() instanceof Join) ? ((Join) additionalJoin.getPartner()) : null;&#xA;        }&#xA;&#xA;        org.eclipse.emf.common.util.ECollections.reverse(additionalJoins);&#xA;        path.addAll(additionalJoins);&#xA;&#xA;        return org.eclipse.emf.common.util.ECollections.unmodifiableEList(path);"/>
      <genOperations ecoreOperation="query.ecore#//SubSelect/isAggregated" body="return getSelect().getJoinedTargets().stream()&#xA;&#x9;&#x9;&#x9;&#x9;.anyMatch(t -> t.getFeatures().stream()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.anyMatch(f -> (f instanceof hu.blackbelt.judo.meta.query.Function) &amp;&amp; hu.blackbelt.judo.meta.query.runtime.QueryUtils.isAggregated(((hu.blackbelt.judo.meta.query.Function) f).getSignature())));"/>
      <genOperations ecoreOperation="query.ecore#//SubSelect/toString" body="return &quot;(&quot; + (getBase() != null ? getBase().getAlias() : &quot;N/A&quot;) + &quot;.&quot; + (getTransferRelation() != null ? getTransferRelation().getName() : &quot;&quot;) + &quot; => [&quot; + getNavigationJoins().stream().map(j -> j.toString()).collect(java.util.stream.Collectors.joining(&quot;,&quot;)) + &quot;]) AS &quot; + getAlias();"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//SubSelectFeature">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//SubSelectFeature/subSelect"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//SubSelectFeature/subSelectFeature"/>
      <genOperations ecoreOperation="query.ecore#//SubSelectFeature/toString" body="if ((getSubSelectFeature() instanceof hu.blackbelt.judo.meta.query.Function) &amp;&amp; hu.blackbelt.judo.meta.query.runtime.QueryUtils.isAggregated(((hu.blackbelt.judo.meta.query.Function) getSubSelectFeature()).getSignature())) {&#xA;            final hu.blackbelt.judo.meta.query.Function f = (hu.blackbelt.judo.meta.query.Function) getSubSelectFeature();&#xA;            return getSubSelect().getAlias() + &quot;.&quot; + f.getTargetAsString().replace(&quot; AS &quot;, &quot;&quot;) + getTargetAsString();&#xA;        } else {&#xA;            return &quot;N/A&quot;;&#xA;        }"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//Target">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Target/features"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute query.ecore#//Target/index"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference query.ecore#//Target/referencedTargets"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//Target/type"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//Target/node"/>
      <genOperations ecoreOperation="query.ecore#//Target/getAllTargets" body="return hu.blackbelt.judo.meta.query.runtime.QueryUtils.getAllTargetsOfTarget(this);"/>
      <genOperations ecoreOperation="query.ecore#//Target/setContainerWithIdFeature"
          body="    setNode(node);&#xA;    getFeatures().add(hu.blackbelt.judo.meta.query.util.builder.QueryBuilders.newIdAttributeBuilder().withNode(node).build());&#xA;    getFeatures().add(hu.blackbelt.judo.meta.query.util.builder.QueryBuilders.newTypeAttributeBuilder().withNode(node).build());">
        <genParameters ecoreParameter="query.ecore#//Target/setContainerWithIdFeature/node"/>
      </genOperations>
      <genOperations ecoreOperation="query.ecore#//Target/toString" body="return (getType() != null ? getType().getName() : &quot;&quot;) + &quot;@&quot; + getIndex();"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//TypeAttribute">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//TypeAttribute/node"/>
      <genOperations ecoreOperation="query.ecore#//TypeAttribute/toString" body="return &quot;Entity type of &quot; + getNode().getAlias() + (getTarget() != null ? &quot;@&quot; + getTarget().getIndex() : &quot;&quot;);"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//ReferencedTarget">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//ReferencedTarget/target"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference query.ecore#//ReferencedTarget/reference"/>
    </genClasses>
    <genClasses ecoreClass="query.ecore#//ParameterType"/>
  </genPackages>
</genmodel:GenModel>
